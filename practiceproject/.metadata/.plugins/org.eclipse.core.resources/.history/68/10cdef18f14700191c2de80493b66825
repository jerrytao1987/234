package cn.itcast.springmvc.controller;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;
import java.util.UUID;

import javax.servlet.ServletInputStream;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.servlet.ModelAndView;

import cn.itcast.springmvc.exception.MyException;
import cn.itcast.springmvc.pojo.Item;
import cn.itcast.springmvc.pojo.Items;
import cn.itcast.springmvc.pojo.QueryVo;
import cn.itcast.springmvc.service.ItemService;

@Controller
public class ItemController {
	@Autowired
	private ItemService itemService;
	// @RequestMapping：里面放的是请求的url，和用户请求的url进行匹配
	// action可以写也可以不写
	@RequestMapping("/itemList.action")
	public ModelAndView queryItemList() {
		/*// 创建页面需要显示的商品数据
		List<Item> list = new ArrayList<>();
		list.add(new Item(1, "1华为 荣耀8", 2399, new Date(), "质量好！1"));
		list.add(new Item(2, "2华为 荣耀8", 2399, new Date(), "质量好！2"));
		list.add(new Item(3, "3华为 荣耀8", 2399, new Date(), "质量好！3"));
		list.add(new Item(4, "4华为 荣耀8", 2399, new Date(), "质量好！4"));
		list.add(new Item(5, "5华为 荣耀8", 2399, new Date(), "质量好！5"));
		list.add(new Item(6, "6华为 荣耀8", 2399, new Date(), "质量好！6"));*/
		List<Items> list = itemService.queryItemList();
		// 创建ModelAndView，用来存放数据和视图
		ModelAndView modelAndView = new ModelAndView();
		// 设置数据到模型中
		modelAndView.addObject("itemList", list);
		// 设置视图jsp，需要设置视图的物理地址
		//modelAndView.setViewName("/WEB-INF/jsp/itemList.jsp");
		// 配置好视图解析器前缀和后缀，这里只需要设置逻辑视图就可以了。
		// 视图解析器根据前缀+逻辑视图名+后缀拼接出来物理路径
		modelAndView.setViewName("itemList");

		return modelAndView;
	}
	/*@RequestMapping("/itemEdit")
	public ModelAndView queryItemById(Integer id){
		Items item = itemService.queryItemById(id);
		ModelAndView modelAndView = new ModelAndView();
		modelAndView.addObject("item",item);
		modelAndView.setViewName("editItem");
		return modelAndView;
	}*/
	/*@RequestMapping("/itemEdit")
	public String queryItemById(HttpServletRequest request,Model model){
		String strId = request.getParameter("id");
		Integer id = Integer.valueOf(strId);
		Items item = itemService.queryItemById(id);
		model.addAttribute("item", item);
		return "editItem";
	}*/
	@RequestMapping("/itemEdit")
	public String queryItemById(@RequestParam(value="id",defaultValue="1")Integer itemId,Model model){
		Items item = itemService.queryItemById(itemId);
		model.addAttribute("item", item);
		return "editItem";
	}
	@RequestMapping("/updateItem")
	public String updateItem(Items item,MultipartFile pictureFile,Model model) throws IllegalStateException, IOException{
		String originalFilename = pictureFile.getOriginalFilename();
		String extName = originalFilename.substring(originalFilename.lastIndexOf("."));
		String fileName = UUID.randomUUID().toString().replaceAll("-", "");
		pictureFile.transferTo(new File("D:/upload",fileName+extName));
		item.setPic(fileName+extName);
		itemService.updateItem(item);
		return "redirect:/itemList.action";
	}
	@RequestMapping(value="/queryItem",method=RequestMethod.POST)
	public String queryItemByQueryVo(QueryVo qv,Integer[] ids) throws MyException{
		//自定义异常
		/*if(true){
			throw new MyException("自定义异常出现了~");
		}*/
		//运行时异常
		//int i=1/0;
		System.out.println(qv.getIds().length);
		System.out.println(ids.length);
		System.out.println(qv.getItemList());
		return "redirect:/itemList.action";
	}
	@RequestMapping("testJson")
	public @ResponseBody Items testJson(@RequestBody Items item){
		return item;
	}
	
	@RequestMapping("item/{id}")
	@ResponseBody
	public Items queryItemById1(@PathVariable("id") Integer itemId){
		Items item = itemService.queryItemById(itemId);
		return item;
	}
	@RequestMapping("/postEntity")
	public @ResponseBody String testJson(HttpServletRequest request) throws IOException{
		ServletInputStream in = request.getInputStream();
		byte[] b = new byte[1024];
		int len = -1;
		while((len=in.read(b))!=-1){
			System.out.println(new String(b,0,len));
		}
		return "hello";
	}
}
