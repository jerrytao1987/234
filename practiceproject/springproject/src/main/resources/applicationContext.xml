<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

	<!-- <bean name="user" class="com.springdemo.bean.User" init-method="init" destroy-method="destroy" scope="singleton">
		<constructor-arg name="name" value="tom"></constructor-arg>
		<constructor-arg name="age" value="32"></constructor-arg>
	</bean>
	<bean name="user2" class="com.springdemo.create_bean.UserFactory" factory-method="createUser"></bean>
	<bean name="userFactory" class="com.springdemo.create_bean.UserFactory"></bean>
	<bean name="user3" factory-bean="userFactory" factory-method="createUser2"></bean>
	<bean name="user4" class="com.springdemo.bean.User" p:name="jack" p:age="23"></bean>
	<bean name="user5" class="com.springdemo.bean.User">
		<property name="name" value="#{user.name}"></property>
		<property name="age" value="#{20}"></property>
	</bean>
	<bean name="user6" class="com.springdemo.bean.User">
		<property name="arr">
			<array>
				<value>jerry</value>
				<ref bean="user"/>
			</array>
		</property>
		<property name="list">
			<list>
				<value>tom</value>
				<ref bean="user2"/>
			</list>
		</property>
		<property name="map">
			<map>
				<entry key="name" value="jack"></entry>
				<entry key="user" value-ref="user3"></entry>
			</map>
		</property>
		<property name="prop">
			<props>
				<prop key="name">lucy</prop>
				<prop key="age">22</prop>
			</props>
		</property>
	</bean> -->
	
	<!-- 配置目标对象 -->
	<!-- <bean name="userService" class="com.springdemo.service.UserServiceImpl"></bean> -->
	<!-- 配置通知对象 -->
	<bean name="myAdvice" class="com.springdemo.service.MyAdvice"></bean>
	<!-- 配置将通知织入目标对象 -->
	<aop:config>
		<!-- 配置切入点 -->
		<aop:pointcut expression="execution(* com.springdemo.service.*ServiceImpl.*(..))" id="pc"/>
		<!-- 配置切面 -->
		<aop:aspect ref="myAdvice">
			<aop:before method="before" pointcut-ref="pc"/>
			<aop:after-returning method="afterReturning" pointcut-ref="pc"/>
			<aop:around method="around" pointcut-ref="pc"/>
			<aop:after-throwing method="afterException" pointcut-ref="pc"/>
			<aop:after method="after" pointcut-ref="pc"/>
		</aop:aspect>
	</aop:config>
	<!-- 开启aop自动注解 -->
	<aop:aspectj-autoproxy/>
	<context:property-placeholder location="db.properties"/>
	<bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>
	
	<bean name="userDao" class="com.springdemo.jdbc.UserDao">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	<!-- 配置事务模板对象 -->
	<!-- <bean name="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager" ref="transactionManager"></property>
	</bean>
	<bean name="userService" class="com.springdemo.service.UserServiceImpl">
		<property name="tt" ref="transactionTemplate"></property>
	</bean> -->
	<!-- <tx:advice id="myadvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true"/>
		</tx:attributes>
	</tx:advice> 
	<aop:config>
		<aop:pointcut expression="execution(* com.springdemo.service.*ServiceImpl.*(..))" id="txPc"/>
		<aop:advisor advice-ref="myadvice" pointcut-ref="txPc"/>
	</aop:config>-->
	<tx:annotation-driven/>
	<bean name="userService" class="com.springdemo.service.UserServiceImpl"></bean>
	<context:component-scan base-package="com.springdemo"></context:component-scan>
	<!-- <import resource="com/springdemo/bean/applicationContext.xml"/> -->
</beans>